<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.pochi.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.demo.pochi.pojo.SysUser">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="openid" property="openId"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="nick_name" property="nickName"/>
        <result column="header" property="header"/>
        <result column="note" property="note"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="login_time" property="loginTime"/>
        <result column="status" property="status"/>
        <result column="deleted" property="deleted"/>
    </resultMap>
    <insert id="save">
        insert into sys_user(id, username, openid, password, email, nick_name, header, note) values (
        #{id}, #{username}, #{openId}, #{password},#{email}, #{nickName}, #{header}, #{note}
        )
    </insert>
    <update id="updateLoginTime">
        update sys_user
        set login_time = NOW()
        where username = #{username}
    </update>
    <update id="update">
       update sys_user
        set openid    = #{openId},
            email     = #{email},
            nick_name = #{nickName},
            header    = #{header},
            note      = #{note}
        where id = #{id}
    </update>
    <update id="delete">
        update sys_user
        set deleted = 1
        where id = #{id}
    </update>
    <update id="updateStatus">
        update sys_user
        set status = #{status}
        where id = #{id}
    </update>

    <select id="getByUsername" resultMap="BaseResultMap">
        select id,
               username,
               openid,
               password,
               email,
               nick_name,
               header,
               note,
               status,
               deleted
        from sys_user
        where username = #{username}
    </select>
    <select id="getById" resultMap="BaseResultMap">
        select id,
               username,
               openid,
               password,
               email,
               nick_name,
               header,
               note,
               create_time,
               update_time,
               login_time,
               status
        from sys_user
        where id = #{id}
    </select>
    <select id="getByPage" resultMap="BaseResultMap">
        select id,
        username,
        nick_name,
        header,
        email,
        note,
        create_time,
        username,
        login_time,
        status
        from sys_user
        where deleted = 0
        <if test="params.username != null and params.username!=''">
            and username = #{params.username}
        </if>
        <if test="params.nickName != null and params.nickName!=''">
            and nick_name like concat('%',#{params.nickName},'%')
        </if>
        <if test="params.status != null">
            and status = #{params.status}
        </if>
        limit #{index}, #{pageSize}
    </select>
    <select id="countByPage" resultType="java.lang.Integer">
        select count(*)
        from sys_user
        where deleted = 0
        <if test="params.username != null and params.username!=''">
            and username = #{params.username}
        </if>
        <if test="params.nickName != null and params.nickName!=''">
            and nick_name like concat('%',#{params.nickName},'%')
        </if>
        <if test="params.status != null and params.status!=''">
            and status = #{params.status}
        </if>
    </select>


</mapper>